# Parameter definitions for thorn JordanFBSSN

# define metric evolution quantities
shares: ADMBase
EXTENDS CCTK_KEYWORD evolution_method "evolution_method"
{
  JordanFBSSN :: "Use JordanFBSSN to evolve metric and curvature"
}
EXTENDS CCTK_KEYWORD lapse_evolution_method "lapse_evolution_method"
{
  JordanFBSSN :: "Use JordanFBSSN to evolve lapse"
}
EXTENDS CCTK_KEYWORD shift_evolution_method "shift_evolution_method"
{
  JordanFBSSN :: "Use JordanFBSSN to evolve shift"
}
EXTENDS CCTK_KEYWORD dtlapse_evolution_method "dtlapse_evolution_method"
{
  JordanFBSSN :: "Use JordanFBSSN to evolve dt_lapse"
}
EXTENDS CCTK_KEYWORD dtshift_evolution_method "dtshift_evolution_method"
{
  JordanFBSSN :: "Use JordanFBSSN to evolve dt_shift"
}

#define scalar evolution quantites
shares: ScalarBase

USES CCTK_REAL V_lambda
USES CCTK_REAL mu
USES CCTK_REAL phi1_0
USES CCTK_REAL phi2_0
USES CCTK_INT  n_phi1
USES CCTK_INT  n_phi2
USES CCTK_REAL Kphi1_0
USES CCTK_REAL Kphi2_0
USES CCTK_INT  n_Kphi1
USES CCTK_INT  n_Kphi2
USES CCTK_BOOLEAN forcing_switch


EXTENDS CCTK_KEYWORD scalar_evolution_method "Scalar field evolution method"
{
  JordanFBSSN :: "Use JordanFBSSN to evolve scalar field and  momentum" 
}


#define method of lines quantites

shares: MethodOfLines
USES CCTK_INT MoL_Num_Evolved_Vars
USES CCTK_INT MoL_Num_Constrained_Vars
USES CCTK_INT MoL_Num_SaveAndRestore_Vars


restricted:

#Write MoL register

CCTK_INT LeanBSSN_MaxNumEvolvedVars "The maximum number of evolved variables used by JordanFBSSN" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Evolved_Vars
{
  23:23         :: "lapse (1), shift(3), hmetric (6), hcurv(6), trK (1), conf_fac(1), Gamma (3), phi(1), Kphi(1)"
} 23

CCTK_INT LeanBSSN_MaxNumConstrainedVars "The maximum number of constrained variables used by JordanFBSSN" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Constrained_Vars
{
  16:16         :: "metric(6), extrinsic curvature(6), dtlapse(1) and dtshift(3)"
} 16

CCTK_INT LeanBSSN_MaxNumSandRVars "The maximum number of save and restore variables used by JordanFBSSN" ACCUMULATOR-BASE=MethodofLines::MoL_Num_SaveAndRestore_Vars
{
  0:0           :: "none"
} 0


CCTK_REAL phi_at_inf "scalar field at r-> inf" 
{
*:*		:: "Usually small, cannot be zero"
} 10e-5

private:

CCTK_REAL conf_fac_floor "Minimal value of conformal factor"
{
  *:*  :: "Any value possible"
} 1.0d-04


BOOLEAN impose_conf_fac_floor_at_initial "Use floor value on initial data?"
{
} "no"

BOOLEAN compute_rhs_at_initial "Compute RHS after the initial data?"
{
} "no"

CCTK_REAL eps_r "Minimal value of radius for eta_transition"
{
  0:*  :: "Any value possible"
} 1.0d-06


BOOLEAN calculate_constraints "Calculate the BSSN constraints?" STEERABLE=always
{
} "no"

CCTK_INT calculate_constraints_every "Calculate the BSSN constraints every N iterations" STEERABLE=always
{
  *:*  :: "0 or a negative value means never compute them"
} 1



# Parameters related to the particular structure of the BSSN equations
#=====================================================================

CCTK_INT derivs_order "Order for derivatives"
{
  4 :: "4th order stencils"
  6 :: "6th order stencils"
} 4


BOOLEAN use_advection_stencils "Use lop-sided stencils for advection derivs"
{
} "yes"


CCTK_REAL chi_gamma "adding Yo-term to the gamma equation"
{
  *:*  :: "2/3 is a good value; the sign must be the same as betak,k"
} 0.0


BOOLEAN make_aa_tracefree "Remove trace of aij after each timestep?"
{
} "yes"

BOOLEAN reset_dethh "Reset determinant of conformal metric?"
{
} "no"

# BOOLEAN reset_gamma "Reset gamma according to gamma^a = hu^{mn} chr^a_{mn}"
# {
# } "no"


# Parameters for the gauge conditions
#====================================

BOOLEAN precollapsed_lapse "Initialize lapse as alp*psi^{-2} ?"
{
} "no"

BOOLEAN rescale_shift_initial "Initialize shift as psi^{-2} beta ?"
{
} "no"


CCTK_REAL zeta_alpha "Coefficient in front of the ad1_alpha term in slicing"
{
  *:*  :: "Anything possible"
} 1


BOOLEAN eta_transition "Use an r-dependent eta?"
{
} "no"

CCTK_REAL eta_transition_r "Damping parameter in live shift"
{
  0:*  :: "non-negative"
} 1


CCTK_REAL eta_beta "Damping parameter in live shift"
{
  0:*  :: "non-negative"
} 1


CCTK_REAL zeta_beta "Factor in front of ad1_beta in the live shift"
{
  0:*  :: "non-negative"
} 1


CCTK_REAL beta_Alp "Exponent for lapse in front of the Gamma^i term in the shift"
{
  *:*  :: "Anything possible, default is zero"
} 0.0


CCTK_REAL beta_Gamma "Coefficient in front of the Gamma^i term in the shift"
{
  *:*  :: "Anything possible"
} 0.75

CCTK_REAL beta_f_delta1 "delta1 coefficient for the shift condition of 1702.01755"
{
  0:*  :: "non-negative"
} 0.0125

CCTK_REAL beta_f_delta2 "delta2 coefficient for the shift condition of 1702.01755"
{
  0:*  :: "non-negative"
} 0.0005


# Parameters for the outer boundary condition
#============================================

CCTK_INT n_hij "n power of outgoing boundary r^n fall off rate for h_ij"
{
  0:2           :: "1 is reasonable"
} 1

CCTK_INT n_aij "n power of outgoing boundary r^n fall off rate for A_ij"
{
  0:2           :: "2 is reasonable"
} 2

CCTK_INT n_conf_fac "n power of outgoing boundary r^n fall off rate for conf_fac"
{
  0:2           :: "1 is reasonable"
} 1

CCTK_INT n_alpha "n power of outgoing boundary r^n fall off rate for alpha"
{
  0:2           :: "1 is my guess"
} 1

CCTK_INT n_beta "n power of outgoing boundary r^n fall off rate for beta"
{
  0:2           :: "1 is my guess"
} 1

CCTK_INT n_trk "n power of outgoing boundary r^n fall off rate for A_ij"
{
  0:2           :: "2 is reasonable"
} 2

CCTK_INT n_gammat "n power of outgoing boundary r^n fall off rate for Gamma^i"
{
  0:2           :: "Maybe 1?"
} 1

BOOLEAN z_is_radial "use with multipatch"
{
} "no"


# Parameters for the scalar field evolution
#============================================

KEYWORD theory "The theory used to model the scalar field"
{
	 "DEF"        :: "DEF theory, Bphi = exp(phi^2/2), coupling through beta"
	 "BD"         :: "BD theory, Bphi = exp(phi), coupling through k0 or alpha0"
	 "decoupling" :: "decoupling limit"
	 "decEF"      :: "decoupling limit, Einstein frame"
	 "GR"	      :: "General relativity, no scalar field"
} "DEF"

CCTK_REAL C_BD "Free parameter C in BD theory, alpha_0^2 = C_BD"
{
 0:*		:: "Must be non-negative. Order of "
} 0.0

CCTK_REAL B_DEF "Free parameter B in DEF theory,   -2 beta =  B"
{
 0:*		:: "Must be non-negative."
} 0.0

BOOLEAN staticBG "Only evolve SF"
{
} "no"

